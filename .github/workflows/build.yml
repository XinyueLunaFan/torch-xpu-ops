name: Win-xpu-build-UT
on:
    workflow_dispatch:
      inputs:
        win_runner:
            description: Where to run the GHA job?
            type: choice
            options:
            - "icx-4434"
            - "self-hosted"
        working_commit:
            description: 'Working commit to pass to xpu.txt'
            required: true
            type: string

env:
    home_dir: 'torch'
    conda_env: 'torch2_venv'
    conda_path: 'C:\Users\nrvalgo_jenkinsadm\miniforge3'
    python_version: '3.10'
    node_proxy: 'http://proxy-us.intel.com:911'
    USE_XPU: 1
    VS2022INSTALLDIR: 'C:\Program Files (x86)\Microsoft Visual Studio\2022\BuildTools'
    ACTIONS_RUNNER_DEBUG: true
    PATH: 'C:\Program Files\Git\cmd;C:\Users\nrvalgo_jenkinsadm\miniforge3;C:\Users\nrvalgo_jenkinsadm\miniforge3\Scripts'

jobs:
  Preparation:
    runs-on: ["${{ inputs.win_runner }}"]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.WORKFLOW_TOKEN }}
        ref: main
        fetch-depth: 0
        path: ${{ env.home_dir }}//actionrepo

    - name: Set conda environment
      shell: cmd
      run: |
         call conda env list
         call conda list
         call conda remove -n %conda_env% --all -y
         call conda create -n %conda_env% python=3.10 --clone base -y
         call conda activate %conda_env%
         call conda list
         call conda remove ucrt -y
         call pip install cmake==3.26.4 --force -y
         call conda install lintrunner -y
         call conda list

  Build-whls:
    runs-on: ["${{ inputs.win_runner }}"]
    needs: [Preparation]
    steps:
    - name: Build Torch
      shell: cmd
      run: |
        call %conda_path%\envs\%conda_env%
        set "basekit_path=C:\Program Files (x86)\Intel\oneAPI"
        call "%basekit_path%\setvars.bat"

        if exist "%home_dir%\pytorch" (
          rmdir /s /q "%home_dir%\pytorch"
        )

        git clone https://github.com/pytorch/pytorch.git %home_dir%\pytorch
        cd %home_dir%\pytorch
        echo ${{ inputs.working_commit }} > third_party/xpu.txt
        git checkout c8626a4e1f0553c8a9af32515555409d151a00c0
        git log
        pip install pyyaml
        set USE_XPU=1
        set TORCH_XPU_ARCH_LIST="ats-m150"
        python -u setup.py bdist_wheel

    - name: Build TorchVision
      shell: cmd
      run: |
        call %conda_path%\Scripts\activate.bat %conda_env%
        set "basekit_path=C:\Program Files (x86)\Intel\oneAPI"
        call "%basekit_path%\setvars.bat"
        if exist "%home_dir%\vision" rmdir /s /q "%home_dir%\vision"
        git clone https://github.com/pytorch/vision.git %home_dir%\vision
        cd %home_dir%\vision
        pip install -r docs/requirements.txt

        if exist %home_dir%\pytorch\dist\torch-*.whl (
          pip install %home_dir%\pytorch\dist\torch-*.whl --force-reinstall
        ) else (
          echo "No torch whl found."
          exit
        )

        python setup.py bdist_wheel

        if exist %home_dir%\vision\dist\torchvision-*.whl (
          pip install %home_dir%\vision\dist\torchvision-*.whl --force-reinstall        
        ) else (
          echo "No torchvision whl found."
          exit         
        )

