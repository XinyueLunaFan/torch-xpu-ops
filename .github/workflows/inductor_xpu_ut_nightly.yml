name: UT E2E Nightly_OnDemand Tests

on:
  schedule:
    # GMT+8 21:00 every day
    - cron: '0 13 * * *'
  workflow_dispatch:
    inputs:
      ut_suite:
        required: true
        type: string
        default: 'op_example'
        description: op_example,op_finegrain,op_ut,torch_xpu. Delimiter is comma
  
permissions: read-all

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref_name }}-${{ github.ref_type == 'branch' && github.sha }}-${{ github.event_name == 'workflow_dispatch' }}-${{ github.event_name == 'schedule' }}-${{ inputs.suite }}-${{ inputs.dt }}-${{ inputs.mode }}-${{ inputs.secnario }}
  cancel-in-progress: true

jobs:
  Inductor-XPU-UT-Nightly-Tests:
    runs-on: linux.idc.xpu
    timeout-minutes: 900
    steps:
      - name: Checkout torch-xpu-ops
        uses: actions/checkout@v4
      - name: Prepare Stock Pytorch
        run: |
          pwd
          cd ../ && rm -rf pytorch
          git clone -b main https://github.com/pytorch/pytorch
          cd pytorch && git log -n 1 && git submodule sync && git submodule update --init --recursive
          rm -rf third_party/torch-xpu-ops && cp -r ../torch-xpu-ops third_party/
          # Workaround for torch-xpu-ops ci test
          sed -i "s/checkout --quiet \${TORCH_XPU_OPS_COMMIT}/log -n 1/g" caffe2/CMakeLists.txt
      - name: Build Pytorch XPU
        run: |
          source activate xpu_op_${ZE_AFFINITY_MASK}
          conda install cmake ninja -y
          conda install intel::mkl-static intel::mkl-include -y
          cd ../pytorch
          pip install -r requirements.txt
          export USE_XPU=1
          source /opt/intel/oneapi/compiler/latest/env/vars.sh
          export CMAKE_PREFIX_PATH=${CONDA_PREFIX:-"$(dirname $(which conda))/../"}
          python setup.py bdist_wheel
          pip install --force-reinstall dist/*.whl
          for i in {1..3}; do
            pip uninstall -y torchvision
          done
          git clone https://github.com/pytorch/vision && cd vision && python setup.py install && cd ..
      - name: Nightly XPU OP Examples UT Test
        if: ${{ !inputs.ut_suite}}
        uses: ./.github/actions/inductor-xpu-ut-test
        with:
          ut_suite: op_example
      - name: Nightly XPU OP Finegrain UT Test
        if: ${{ !inputs.ut_suite}}
        uses: ./.github/actions/inductor-xpu-ut-test
        with:
          ut_suite: op_finegrain
      - name: Nightly XPU OP UT Test
        if: ${{ !inputs.ut_suite}}
        uses: ./.github/actions/inductor-xpu-ut-test
        with: 
          ut_suite: op_ut
      - name: Nightly Torch XPU UT Test
        if: ${{ !inputs.ut_suite}}
        uses: ./.github/actions/inductor-xpu-ut-test
        with:
          ut_suite: torch_xpu
      - name: OnDemand UT Test (${{ inputs.ut_suite }})
        if: ${{ inputs.ut_suite}}
        uses: ./.github/actions/inductor-xpu-ut-test
        with:
          ut_suite: ${{ inputs.ut_suite }}
